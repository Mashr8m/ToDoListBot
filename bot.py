import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

class TodoBot:
    def __init__(self):
        self.tasks = []

    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        user = update.effective_user
        await update.message.reply_text(
            f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n"
            "–Ø —Ç–≤–æ–π To-Do List –±–æ—Ç!\n\n"
            "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
            "/add <–∑–∞–¥–∞—á–∞> - –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É\n"
            "/list - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏\n"
            "/done <–Ω–æ–º–µ—Ä> - –æ—Ç–º–µ—Ç–∏—Ç—å –∑–∞–¥–∞—á—É –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π\n"
            "/help - –ø–æ–º–æ—â—å"
        )

    async def help(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        help_text = """
üìù To-Do List Bot - –ø–æ–º–æ—â—å:

/add <—Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏> - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
/list - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏
/done <–Ω–æ–º–µ—Ä> - –æ—Ç–º–µ—Ç–∏—Ç—å –∑–∞–¥–∞—á—É –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π
/help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ

–ü—Ä–∏–º–µ—Ä:
/add –ö—É–ø–∏—Ç—å –º–æ–ª–æ–∫–æ
/list
/done 1
"""
        await update.message.reply_text(help_text)

    async def add_task(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        if not context.args:
            await update.message.reply_text(" –ò—Å–ø–æ–ª—å–∑—É–π: /add <—Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏>")
            return

        task_text = " ".join(context.args)
        self.tasks.append({
            'text': task_text,
            'completed': False
        })

        await update.message.reply_text(f" –ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞: {task_text}")

    async def list_tasks(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        if not self.tasks:
            await update.message.reply_text(" –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –ø—É—Å—Ç!")
            return

        message = "üìã –¢–≤–æ–π To-Do List:\n\n"
        for i, task in enumerate(self.tasks, 1):
            status = "–û—Ç–ª–∏—á–Ω–æ" if task['completed'] else "–û–∂–∏–¥–∞–Ω–∏–µ"
            message += f"{i}. {status} {task['text']}\n"

        await update.message.reply_text(message)


def main():
    TOKEN = "8435156880:AAHeaabYxqycxq2mn8zK7e6rLU26rWpEUB0"

    bot = TodoBot()
    application = Application.builder().token(TOKEN).build()

    application.add_handler(CommandHandler("start", bot.start))
    application.add_handler(CommandHandler("help", bot.help))
    application.add_handler(CommandHandler("add", bot.add_task))
    application.add_handler(CommandHandler("list", bot.list_tasks))

    application.run_polling(


if __name__ == "__main__":
    main()

